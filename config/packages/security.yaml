security:
    encoders:
        App\Entity\Account:
            algorithm: bcrypt
    # https://symfony.com/doc/current/security.html#where-do-users-come-from-user-providers
    providers:
        chain_provider:
            chain:
                providers: [in_database_email, in_database_username]
        in_memory: { memory: null }
        in_database_email :
            entity:
                class: App\Entity\Account
                property : email
        in_database_username:
            entity:
                class: App\Entity\Account
                property: username
    firewalls:
        dev:
            pattern: ^/(_(profiler|wdt)|css|images|js)/
            security: false
        main:
            anonymous: lazy

            provider: chain_provider

            form_login:
                csrf_token_generator: security.csrf.token_manager
                login_path: login
                check_path: login

            logout:
                path: logout
                target: login

            # activate different ways to authenticate
            # https://symfony.com/doc/current/security.html#firewalls-authentication

            # https://symfony.com/doc/current/security/impersonating_user.html
            # switch_user: true

    # Easy way to control access for large sections of your site
    # Note: Only the *first* access control that matches will be used
    access_control:
         - { path: ^/login, roles: IS_AUTHENTICATED_ANONYMOUSLY }
         - { path: ^/register, roles: IS_AUTHENTICATED_ANONYMOUSLY }
         - { path: ^/, roles: ROLE_USER }
